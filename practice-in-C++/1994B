想法：因為XOR的特性，所以要找出第一個'1'的位置，如果在這個元素之後的不同都可以藉由這個'1'轉變為相同；
反之，如果在這之前就無法轉變成相同的bit

#include<iostream>
#include<string>

using std::cin ;
using std::cout ;
using std::string ;
using std::endl ;
 
int main(void)
{
    int q ;
    cin >> q ;
    
    while (q--) {
        int n ;
        cin >> n ;
        
        string s , t ;
        cin >> s >> t ;
        
        bool success = true ;
        int index = -1 ;
        for( int i = 0 ; i < s.size() ; i++ ) {
            if ( s[i] == '1' ) {
                index = i ;
                break ;
            }
        }
                                                            
        
        for( decltype(s.size()) i = 0 ;success && i < s.size() ; i++ ) {
            if ( s[i] == t[i] )
                continue ;
            
            if ( i < index )
                success = false ;
        }
         
        
        if ( success )
            cout << "Yes" << endl ;
        else
            cout << "No" << endl ;
        
    }
    
    return 0 ;
}
