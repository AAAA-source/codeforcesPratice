想法：這題要用greedy去想，紀錄每個有被更改的點（不論更改幾次），因為只要最後一次更改成最小就好；所以視為「有更改成最小值」的狀態。接著把修改的字串sort過，把最小的字母一一從頭填入。
如果有多餘的字母隨便放其實沒關係，我們只在乎最後一次的修改

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<limits.h>
#include<stdbool.h>

int compare(const void* a , const void* b)
{
    int* A = (int*) a ;
    int* B = (int*) b ;
    
    if (*A > *B)
        return 1 ;
    else if ( *A < *B )
        return -1 ;
    else
        return 0 ;
}


int main(void)
{
    int t ;
    scanf("%d" , &t) ;
    
    while (t--) {
        int n , m ;
        scanf("%d%d" , &n , &m) ;
        
        char string[n + 5] ;
        scanf("%s" , string ) ;
        string[n] = '\0' ;
        
        int array[m] ;
        for(int i = 0 ; i < m ; i++) {
            scanf("%d" , &(array[i]) ) ;
        }
        char trans[m + 5] ;
        scanf("%s" , trans) ;
        trans[m] = '\0' ;
        
        bool flag[n] ;
        for(int i = 0 ; i < n ; i++) {
            flag[i] = 0 ;
        }
        
        for(int i = 0 ; i < m ; i++) {
            flag[ array[i] - 1 ] = 1 ;
        }
        
        int count[26] = {0} ;
        for(int i = 0 ; i < m ; i++) {
            count[ trans[i] - 'a' ]++ ;
            //printf("count[%d] plus one\n" , trans[i] - 'a') ;
        }
        
        int cursor = 0 ;
        for(int i = 0 ; i < n ; i++) {
            while ( count[cursor] == 0 )
                cursor++ ;
            
            if ( flag[i] == 1 ) {
                //printf("i = %d \n" , i) ;
                //printf("cursor = %d \n" , cursor) ;
                string[i] = cursor + 'a' ;
                count[cursor]-- ;
            }
        }
        
        
        printf("%s\n" , string ) ;
    }
    
    
    return 0 ;
}
